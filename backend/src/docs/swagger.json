{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"email",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CreateUserRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateUserRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SendOTPResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"otp": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message",
					"otp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SendOTPRequest": {
				"properties": {
					"email": {
						"type": "string"
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerifyOTPResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"user": {
						"properties": {
							"createdAt": {
								"type": "string",
								"format": "date-time"
							},
							"email": {
								"type": "string"
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"createdAt",
							"email",
							"id"
						],
						"type": "object"
					},
					"token": {
						"type": "string"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VerifyOTPRequest": {
				"properties": {
					"email": {
						"type": "string"
					},
					"otp": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"otp"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthUser": {
				"properties": {
					"id": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"email",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AuthResponse": {
				"properties": {
					"success": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/AuthUser"
					}
				},
				"required": [
					"success",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"paths": {
		"/api/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Users retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/UserResponse"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get all users",
				"summary": "Retrieve all users",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid input or user already exists"
					}
				},
				"description": "Create a new user",
				"summary": "Create a new user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateUserRequest"
							}
						}
					}
				}
			}
		},
		"/api/users/{userId}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "User retrieved successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Get user by ID",
				"summary": "Retrieve a specific user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The user's identifier",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateUser",
				"responses": {
					"200": {
						"description": "User updated successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid input or email already exists"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Update user by ID",
				"summary": "Update a specific user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The user's identifier",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateUserRequest"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"204": {
						"description": "User deleted successfully"
					},
					"404": {
						"description": "User not found"
					}
				},
				"description": "Delete user by ID",
				"summary": "Delete a specific user",
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"description": "The user's identifier",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/auth/send-register-otp": {
			"post": {
				"operationId": "SendRegisterOTP",
				"responses": {
					"200": {
						"description": "OTP sent successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SendOTPResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request or user already exists"
					}
				},
				"description": "Send OTP for user registration",
				"summary": "Send OTP to email for registration",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendOTPRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/verify-register-otp": {
			"post": {
				"operationId": "VerifyRegisterOTP",
				"responses": {
					"200": {
						"description": "Registration successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VerifyOTPResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid OTP or registration failed"
					}
				},
				"description": "Verify OTP and create user account",
				"summary": "Verify registration OTP and create account",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyOTPRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/send-login-otp": {
			"post": {
				"operationId": "SendLoginOTP",
				"responses": {
					"200": {
						"description": "OTP sent successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SendOTPResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid request or user not found"
					}
				},
				"description": "Send OTP for user login",
				"summary": "Send OTP to email for login",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SendOTPRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/verify-login-otp": {
			"post": {
				"operationId": "VerifyLoginOTP",
				"responses": {
					"200": {
						"description": "Login successful",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/VerifyOTPResponse"
								}
							}
						}
					},
					"400": {
						"description": "Invalid OTP or login failed"
					}
				},
				"description": "Verify OTP and login user",
				"summary": "Verify login OTP and authenticate user",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/VerifyOTPRequest"
							}
						}
					}
				}
			}
		},
		"/api/auth/me": {
			"get": {
				"operationId": "GetCurrentUser",
				"responses": {
					"200": {
						"description": "User information retrieved",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"description": "Get current authenticated user",
				"summary": "Get current user information",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/auth/logout": {
			"post": {
				"operationId": "Logout",
				"responses": {
					"200": {
						"description": "Logged out successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					}
				},
				"description": "Logout user",
				"summary": "Logout current user",
				"tags": [
					"Authentication"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:3001/api"
		}
	]
}